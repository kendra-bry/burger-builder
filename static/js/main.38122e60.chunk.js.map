{"version":3,"sources":["hoc/Auxi.js","components/Layout/Layout.js","components/Burger/Ingredient/Ingredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["aux","props","children","Layout","className","Ingredient","ingredient","type","Burger","ingredients","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","length","BuildControl","label","added","removed","disabled","onClick","controls","BuildControls","ingredientAdded","ingredientRemoved","price","purchasable","ordered","toFixed","ctrl","Backdrop","show","clicked","Modal","modalClosed","style","transform","opacity","Button","btnType","join","OrderSummary","purchaseCancel","purchaseContinue","summary","PRICES","lettuce","bacon","cheese","meat","BurgerBuilder","addIngredientHandler","updatedCount","state","updatedIngredients","priceIncrease","newPrice","totalPrice","setState","updatePurchase","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchasing","alert","sum","this","disabledInfo","key","Component","App","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"4XACeA,EADH,SAAAC,GAAK,OAAIA,EAAMC,UCaZC,G,MATA,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SACjB,OACC,eAAC,EAAD,WACC,gEACA,sBAAME,UAAU,UAAhB,SAA2BF,S,cCiCfG,G,YArCI,SAAC,GAAc,IAC5BC,EAAa,KAClB,OAFgC,EAAXC,MAGpB,IAAK,eACJD,EAAa,qBAAKF,UAAW,gBAC7B,MACD,IAAK,YACJE,EACC,sBAAKF,UAAW,WAAhB,UACC,qBAAKA,UAAW,WAChB,qBAAKA,UAAW,cAGlB,MACD,IAAK,OACJE,EAAa,qBAAKF,UAAW,SAC7B,MACD,IAAK,SACJE,EAAa,qBAAKF,UAAW,WAC7B,MACD,IAAK,UACJE,EAAa,qBAAKF,UAAW,YAC7B,MACD,IAAK,QACJE,EAAa,qBAAKF,UAAW,UAC7B,MACD,QACCE,EAAa,KAGf,OAAOA,ICZOE,EAlBA,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACbC,EAAyBC,OAAOC,KAAKH,GACvCI,KAAI,SAAAC,GAAK,OAAI,YAAIC,MAAMN,EAAYK,KAASD,KAAI,SAACG,EAAGC,GAAJ,OAAU,cAAC,EAAD,CAA4BV,KAAMO,GAAjBA,EAAQG,SACnFC,QAAO,SAACC,EAAKC,GACb,OAAOD,EAAIE,OAAOD,KAChB,IAIJ,OAHsC,IAAlCV,EAAuBY,SAC1BZ,EAAyB,kEAGzB,sBAAKN,UAAU,SAAf,UACC,cAAC,EAAD,CAAYG,KAAK,cAChBG,EACD,cAAC,EAAD,CAAYH,KAAK,qBCCLgB,G,YAfM,SAAAtB,GAAU,IACtBuB,EAAoCvB,EAApCuB,MAAOC,EAA6BxB,EAA7BwB,MAAOC,EAAsBzB,EAAtByB,QAASC,EAAa1B,EAAb0B,SAC/B,OACC,sBAAKvB,UAAU,UAAf,UACC,qBAAKA,UAAU,QAAf,SAAwBoB,IACxB,wBAAQpB,UAAU,OAAOwB,QAASF,EAASC,SAAUA,EAArD,oBAGA,wBAAQvB,UAAU,OAAOwB,QAASH,EAAlC,sBCPGI,EAAW,CACf,CAAEL,MAAO,UAAWjB,KAAM,WAC1B,CAAEiB,MAAO,QAASjB,KAAM,SACxB,CAAEiB,MAAO,SAAUjB,KAAM,UACzB,CAAEiB,MAAO,OAAQjB,KAAM,SA4BVuB,EAzBO,SAAA7B,GAAU,IACtB8B,EAA8E9B,EAA9E8B,gBAAiBC,EAA6D/B,EAA7D+B,kBAAmBL,EAA0C1B,EAA1C0B,SAAUM,EAAgChC,EAAhCgC,MAAOC,EAAyBjC,EAAzBiC,YAAaC,EAAYlC,EAAZkC,QAC1E,OACE,sBAAK/B,UAAU,WAAf,UACE,gDACiB,uCAAU6B,EAAMG,QAAQ,SAExCP,EAAShB,KAAI,SAAAwB,GAAI,OAChB,cAAC,EAAD,CAEEb,MAAOa,EAAKb,MACZC,MAAO,kBAAMM,EAAgBM,EAAK9B,OAClCmB,QAAS,kBAAMM,EAAkBK,EAAK9B,OACtCoB,SAAUA,EAASU,EAAK9B,OAJnB8B,EAAKb,UAMd,wBACEG,UAAWO,EACXN,QAASO,EACT/B,UAAU,eAHZ,2BCnBSkC,G,YAJE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACfD,EAAO,qBAAKnC,UAAU,WAAWwB,QAASY,IAAkB,OCiB/CC,EAhBD,SAAC,GAAqC,IAAnCvC,EAAkC,EAAlCA,SAAUqC,EAAwB,EAAxBA,KAAMG,EAAkB,EAAlBA,YAC/B,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAUH,KAAMA,EAAMC,QAASE,IAC/B,qBACEtC,UAAU,QACVuC,MAAO,CACLC,UAAWL,EAAO,gBAAkB,qBACpCM,QAASN,EAAO,IAAM,KAJ1B,SAMGrC,QCLM4C,G,MAPA,SAAC,GAAD,IAAG5C,EAAH,EAAGA,SAAUsC,EAAb,EAAaA,QAASO,EAAtB,EAAsBA,QAAtB,OACb,wBACE3C,UAAW,CAAC,OAAQ,SAAU2C,GAASC,KAAK,KAC5CpB,QAASY,EAFX,SAGEtC,MCmBW+C,EAtBM,SAAChD,GAAW,IACvBQ,EAAyDR,EAAzDQ,YAAayC,EAA4CjD,EAA5CiD,eAAgBC,EAA4BlD,EAA5BkD,iBAAkBlB,EAAUhC,EAAVgC,MACjDmB,EAAUzC,OAAOC,KAAKH,GAAaI,KAAI,SAAAC,GAAK,OAChD,qBAAgBV,UAAU,MAA1B,UACGU,EADH,KACYL,EAAYK,KADfA,MAIX,OACE,eAAC,EAAD,WACE,oBAAIV,UAAU,KAAd,wBACA,mFACA,6BAAKgD,IACL,4BAAG,oDAAuBnB,EAAMG,QAAQ,GAArC,SACH,sDACA,sBAAKhC,UAAU,KAAf,UACE,cAAC,EAAD,CAAQ2C,QAAQ,SAASP,QAASU,EAAlC,oBACA,cAAC,EAAD,CAAQH,QAAQ,UAAUP,QAASW,EAAnC,6BCbFE,EAAS,CACbC,QAAS,IACTC,MAAO,IACPC,OAAQ,GACRC,KAAM,KAgGOC,E,kDA5Fb,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAcR0D,qBAAuB,SAAApD,GACrB,IACMqD,EADW,EAAKC,MAAMpD,YAAYF,GACR,EAC1BuD,EAAkB,eAAQ,EAAKD,MAAMpD,aAC3CqD,EAAmBvD,GAAQqD,EAC3B,IAAMG,EAAgBV,EAAO9C,GAEvByD,EADW,EAAKH,MAAMI,WACAF,EAC5B,EAAKG,SAAS,CAAED,WAAYD,EAAUvD,YAAaqD,IACnD,EAAKK,eAAeL,IAxBH,EA2BnBM,wBAA0B,SAAA7D,GACxB,IAAM8D,EAAW,EAAKR,MAAMpD,YAAYF,GACxC,KAAI8D,GAAY,GAAhB,CAGA,IAAMT,EAAeS,EAAW,EAC1BP,EAAkB,eAAQ,EAAKD,MAAMpD,aAC3CqD,EAAmBvD,GAAQqD,EAC3B,IAAMU,EAAiBjB,EAAO9C,GAExByD,EADW,EAAKH,MAAMI,WACAK,EAC5B,EAAKJ,SAAS,CAAED,WAAYD,EAAUvD,YAAaqD,IACnD,EAAKK,eAAeL,KAvCH,EAmDnBS,gBAAkB,WAChB,EAAKL,SAAS,CAAEM,YAAY,KApDX,EAuDnBtB,eAAiB,WACf,EAAKgB,SAAS,CAAEM,YAAY,KAxDX,EA2DnBrB,iBAAmB,WACjBsB,MAAM,kBA1DN,EAAKZ,MAAQ,CACXpD,YAAa,CACX6C,QAAS,EACTC,MAAO,EACPC,OAAQ,EACRC,KAAM,GAERQ,WAAY,EACZ/B,aAAa,EACbsC,YAAY,GAXG,E,2DA0CJ/D,GACb,IAAMiE,EAAM/D,OAAOC,KAAKH,GACrBI,KAAI,SAAAC,GAAK,OAAIL,EAAYK,MACzBI,QAAO,SAACwD,EAAKtD,GACZ,OAAOsD,EAAMtD,IACZ,GACLuD,KAAKT,SAAS,CAAEhC,YAAawC,EAAM,M,+BAgBnC,IAAME,EAAY,eAAQD,KAAKd,MAAMpD,aACrC,IAAK,IAAIoE,KAAOD,EACdA,EAAaC,GAAOD,EAAaC,IAAQ,EAE3C,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACEtC,KAAMoC,KAAKd,MAAMW,WACjB9B,YAAaiC,KAAKzB,eAFpB,SAGE,cAAC,EAAD,CACEzC,YAAakE,KAAKd,MAAMpD,YACxByC,eAAgByB,KAAKzB,eACrBC,iBAAkBwB,KAAKxB,iBACvBlB,MAAO0C,KAAKd,MAAMI,eAEtB,cAAC,EAAD,CAAQxD,YAAakE,KAAKd,MAAMpD,cAChC,cAAC,EAAD,CACEsB,gBAAiB4C,KAAKhB,qBACtB3B,kBAAmB2C,KAAKP,wBACxBzC,SAAUiD,EACV1C,YAAayC,KAAKd,MAAM3B,YACxBC,QAASwC,KAAKJ,gBACdtC,MAAO0C,KAAKd,MAAMI,oB,GAvFAa,aCCbC,E,uKAVb,OACC,8BACC,cAAC,EAAD,UACC,cAAC,EAAD,Y,GALaD,aCSEE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBb,MAAK,SAACc,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,YE9G5BtB,M","file":"static/js/main.38122e60.chunk.js","sourcesContent":["const aux = props => props.children;\r\nexport default aux;\r\n","import React from 'react';\r\nimport Aux from '../../hoc/Auxi';\r\nimport './Layout.css'\r\n\r\nconst Layout = ({ children }) => {\r\n\treturn (\r\n\t\t<Aux>\r\n\t\t\t<div>Toolbar, SideDrawer, Backdrop</div>\r\n\t\t\t<main className='content'>{children}</main>\r\n\t\t</Aux>\r\n\t);\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Ingredient.css';\r\n\r\nconst Ingredient = ({ type }) => {\r\n  let ingredient = null;\r\n\tswitch (type) {\r\n\t\tcase 'bread-bottom':\r\n\t\t\tingredient = <div className={'BreadBottom'}></div>;\r\n\t\t\tbreak;\r\n\t\tcase 'bread-top':\r\n\t\t\tingredient = (\r\n\t\t\t\t<div className={'BreadTop'}>\r\n\t\t\t\t\t<div className={'Seeds1'}></div>\r\n\t\t\t\t\t<div className={'Seeds2'}></div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'meat':\r\n\t\t\tingredient = <div className={'Meat'}></div>;\r\n\t\t\tbreak;\r\n\t\tcase 'cheese':\r\n\t\t\tingredient = <div className={'Cheese'}></div>;\r\n\t\t\tbreak;\r\n\t\tcase 'lettuce':\r\n\t\t\tingredient = <div className={'Lettuce'}></div>;\r\n\t\t\tbreak;\r\n\t\tcase 'bacon':\r\n\t\t\tingredient = <div className={'Bacon'}></div>;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tingredient = null;\r\n\t\t\tbreak;\r\n\t}\r\n\treturn ingredient;\r\n};\r\n\r\nIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Ingredient;\r\n","import React from 'react';\r\nimport './Burger.css';\r\nimport Ingredient from './Ingredient/Ingredient';\r\n\r\nconst Burger = ({ ingredients }) => {\r\n\tlet transformedIngredients = Object.keys(ingredients)\r\n\t\t.map(igKey => [...Array(ingredients[igKey])].map((_, i) => <Ingredient key={igKey + i} type={igKey} />))\r\n\t\t.reduce((arr, el) => {\r\n\t\t\treturn arr.concat(el);\r\n\t\t}, []);\r\n\tif (transformedIngredients.length === 0) {\r\n\t\ttransformedIngredients = <p>Please start adding ingredients.</p>;\r\n\t}\r\n\treturn (\r\n\t\t<div className='burger'>\r\n\t\t\t<Ingredient type='bread-top' />\r\n\t\t\t{transformedIngredients}\r\n\t\t\t<Ingredient type='bread-bottom' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst BuildControl = props => {\r\n\tconst { label, added, removed, disabled } = props;\r\n\treturn (\r\n\t\t<div className=\"control\">\r\n\t\t\t<div className=\"label\">{label}</div>\r\n\t\t\t<button className=\"less\" onClick={removed} disabled={disabled}>\r\n\t\t\t\tRemove\r\n\t\t\t</button>\r\n\t\t\t<button className=\"more\" onClick={added}>\r\n\t\t\t\tAdd\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport \"./BuildControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: \"Lettuce\", type: \"lettuce\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst BuildControls = props => {\r\n  const { ingredientAdded, ingredientRemoved, disabled, price, purchasable, ordered } = props;\r\n  return (\r\n    <div className=\"controls\">\r\n      <p>\r\n        Current Price: <strong>${price.toFixed(2)}</strong>\r\n      </p>\r\n      {controls.map(ctrl =>\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => ingredientAdded(ctrl.type)}\r\n          removed={() => ingredientRemoved(ctrl.type)}\r\n          disabled={disabled[ctrl.type]} />\r\n      )}\r\n      <button\r\n        disabled={!purchasable}\r\n        onClick={ordered}\r\n        className=\"orderBtn mt3\">\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControls;\r\n","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = ({ show, clicked }) => (\r\n  show ? <div className=\"backdrop\" onClick={clicked}></div> : null\r\n);\r\n\r\nexport default Backdrop;","import React from \"react\";\r\nimport \"./Modal.css\";\r\nimport Aux from '../../../hoc/Auxi';\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nconst Modal = ({ children, show, modalClosed }) => {\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={show} clicked={modalClosed} />\r\n      <div\r\n        className=\"modal\"\r\n        style={{\r\n          transform: show ? 'translateY(0)' : 'translateY(-100vh)',\r\n          opacity: show ? '1' : '0'\r\n        }}>\r\n        {children}\r\n      </div>\r\n    </Aux>\r\n  )\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst Button = ({ children, clicked, btnType }) => (\r\n  <button\r\n    className={['grow', 'button', btnType].join(' ')}\r\n    onClick={clicked}\r\n  >{children}</button>\r\n);\r\n\r\nexport default Button;","import React from \"react\";\r\nimport Aux from \"../../../hoc/Auxi\";\r\nimport Button from \"../../UI/Button/Button\"\r\n\r\nconst OrderSummary = (props) => {\r\n  const { ingredients, purchaseCancel, purchaseContinue, price } = props;\r\n  const summary = Object.keys(ingredients).map(igKey => (\r\n    <li key={igKey} className=\"ttc\">\r\n      {igKey}: {ingredients[igKey]}\r\n    </li>\r\n  ));\r\n  return (\r\n    <Aux>\r\n      <h3 className=\"tc\">Your Order</h3>\r\n      <p>A delicious burger with the following ingredients:</p>\r\n      <ul>{summary}</ul>\r\n      <p><strong>Total Price: ${price.toFixed(2)} </strong></p>\r\n      <p>Continue to checkout?</p>\r\n      <div className=\"tc\">\r\n        <Button btnType=\"danger\" clicked={purchaseCancel}>CANCEL</Button>\r\n        <Button btnType=\"success\" clicked={purchaseContinue}>CONTINUE</Button>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../../hoc/Auxi\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\n\r\nconst PRICES = {\r\n  lettuce: 0.15,\r\n  bacon: 0.75,\r\n  cheese: 0.5,\r\n  meat: 1.3,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ingredients: {\r\n        lettuce: 0,\r\n        bacon: 0,\r\n        cheese: 0,\r\n        meat: 0,\r\n      },\r\n      totalPrice: 4,\r\n      purchasable: false,\r\n      purchasing: false,\r\n    };\r\n  }\r\n\r\n  addIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = { ...this.state.ingredients };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceIncrease = PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceIncrease;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchase(updatedIngredients);\r\n  };\r\n\r\n  removeIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) {\r\n      return;\r\n    }\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients = { ...this.state.ingredients };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceDeduction = PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceDeduction;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchase(updatedIngredients);\r\n  };\r\n\r\n  updatePurchase(ingredients) {\r\n    const sum = Object.keys(ingredients)\r\n      .map(igKey => ingredients[igKey])\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n    this.setState({ purchasable: sum > 0 });\r\n  }\r\n\r\n  purchaseHandler = () => {\r\n    this.setState({ purchasing: true });\r\n  }\r\n\r\n  purchaseCancel = () => {\r\n    this.setState({ purchasing: false })\r\n  }\r\n\r\n  purchaseContinue = () => {\r\n    alert('You continue!')\r\n  }\r\n\r\n  render() {\r\n    const disabledInfo = { ...this.state.ingredients };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    return (\r\n      <Aux>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancel}>\r\n          <OrderSummary\r\n            ingredients={this.state.ingredients}\r\n            purchaseCancel={this.purchaseCancel}\r\n            purchaseContinue={this.purchaseContinue}\r\n            price={this.state.totalPrice} />\r\n        </Modal>\r\n        <Burger ingredients={this.state.ingredients} />\r\n        <BuildControls\r\n          ingredientAdded={this.addIngredientHandler}\r\n          ingredientRemoved={this.removeIngredientHandler}\r\n          disabled={disabledInfo}\r\n          purchasable={this.state.purchasable}\r\n          ordered={this.purchaseHandler}\r\n          price={this.state.totalPrice} />\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BurgerBuilder;\r\n","import React, { Component } from 'react';\nimport Layout from './components/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Layout>\n\t\t\t\t\t<BurgerBuilder /> \n\t\t\t\t</Layout>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}