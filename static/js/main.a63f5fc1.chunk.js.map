{"version":3,"sources":["assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/Items/Item/Item.js","components/Navigation/Items/Items.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","axios-orders.js","components/Burger/Ingredient/Ingredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","reportWebVitals.js","serviceWorkerRegistration.js","index.js"],"names":["Logo","className","src","burgerLogo","alt","Item","children","link","exact","to","Items","DrawerToggle","clicked","onClick","Toolbar","toggled","Backdrop","show","SideDrawer","closed","open","attachedClasses","join","Layout","props","sideDrawerClosedHandler","setState","showSideDrawer","sideDrawerToggleHandler","state","this","Component","instance","axios","create","baseURL","Ingredient","ingredient","type","Burger","ingredients","transformedIngredients","Object","keys","map","igKey","Array","_","i","reduce","arr","el","concat","length","BuildControl","label","added","removed","disabled","controls","BuildControls","ingredientAdded","ingredientRemoved","price","purchasable","ordered","toFixed","ctrl","Modal","nextProps","nextState","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","purchaseCancel","purchaseContinue","summary","Spinner","classes","looks","withErrorHandler","WrappedComponent","useState","error","setError","requestInterceptor","interceptors","request","use","req","responseInterceptor","response","res","console","log","Promise","reject","useEffect","eject","message","PRICES","lettuce","bacon","cheese","meat","addIngredientHandler","updatedCount","updatedIngredients","priceIncrease","newPrice","totalPrice","updatePurchase","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchasing","encodeURIComponent","JSON","stringify","history","push","pathname","search","loading","get","then","data","catch","sum","disabledInfo","key","orderSummary","burger","CheckoutSummary","checkoutCanceled","checkoutContinued","width","margin","ContactData","name","email","address","street","city","zip","submitted","orderHandler","e","preventDefault","order","customer","adderss","deliveryMethod","setTimeout","post","orderForm","action","htmlFor","id","placeholder","Checkout","checkoutCanceledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","parse","decodeURIComponent","path","match","render","Order","ingr","amount","output","ig","display","textTransform","border","padding","Number","parseFloat","orders","err","App","component","BurgerBuilder","Orders","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a63f5fc1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo\">\r\n      <img src={burgerLogo} alt=\"MyBurger\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './Item.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Item = ({ children, link, exact }) => {\r\n  return (\r\n    <li className=\"item\">\r\n      <NavLink\r\n        exact={exact}\r\n        to={link}\r\n      >{children}</NavLink>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Item;","import React from 'react';\r\nimport './Items.css';\r\nimport Item from './Item/Item';\r\n\r\nconst Items = () => {\r\n  return (\r\n    <ul className=\"items\">\r\n      <Item link=\"/burger-builder\" exact>Burger Builder</Item>\r\n      <Item link=\"/burger-builder/orders\" >Orders</Item>\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Items;","import React from 'react';\r\nimport './DrawerToggle.css';\r\n\r\nconst DrawerToggle = ({ clicked }) => {\r\n  return (\r\n    <div className=\"drawerToggle\" onClick={clicked}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\nimport './Toolbar.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport Items from '../Items/Items';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst Toolbar = ({ toggled }) => {\r\n  return (\r\n    <header className=\"toolbar\">\r\n      <div className=\"toolbarLogo\">\r\n        <Logo />\r\n      </div>\r\n      <DrawerToggle clicked={toggled} />\r\n      <nav className=\"desktop\">\r\n        <Items />\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = ({ show, clicked }) => (\r\n  show ? <div className=\"backdrop\" onClick={clicked}></div> : null\r\n);\r\n\r\nexport default Backdrop;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport Items from '../Items/Items';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = ({ closed, open }) => {\r\n  let attachedClasses = ['drawer', 'close'];\r\n  if (open) {\r\n    attachedClasses = ['drawer', 'open'];\r\n  }\r\n  return <>\r\n    <Backdrop show={open} clicked={closed} />\r\n    <div className={attachedClasses.join(' ')}>\r\n      <div className=\"drawerLogo\">\r\n        <Logo />\r\n      </div>\r\n      <nav>\r\n        <Items />\r\n      </nav>\r\n    </div>\r\n  </>;\r\n}\r\n\r\nexport default SideDrawer;","import React, { Component } from 'react';\r\nimport './Layout.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showSideDrawer: false,\r\n    };\r\n  }\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  }\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState((state) => ({ showSideDrawer: !state.showSideDrawer }));\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      <Toolbar toggled={this.sideDrawerToggleHandler} />\r\n      <SideDrawer\r\n        open={this.state.showSideDrawer}\r\n        closed={this.sideDrawerClosedHandler} />\r\n      <main className='content'>{this.props.children}</main>\r\n    </>;\r\n  };\r\n};\r\n\r\nexport default Layout;\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://react-my-burger-de320.firebaseio.com/',\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Ingredient.css';\r\n\r\nconst Ingredient = ({ type }) => {\r\n  let ingredient = null;\r\n\tswitch (type) {\r\n\t\tcase 'bread-bottom':\r\n\t\t\tingredient = <div className={'BreadBottom'}></div>;\r\n\t\t\tbreak;\r\n\t\tcase 'bread-top':\r\n\t\t\tingredient = (\r\n\t\t\t\t<div className={'BreadTop'}>\r\n\t\t\t\t\t<div className={'Seeds1'}></div>\r\n\t\t\t\t\t<div className={'Seeds2'}></div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'meat':\r\n\t\t\tingredient = <div className={'Meat'}></div>;\r\n\t\t\tbreak;\r\n\t\tcase 'cheese':\r\n\t\t\tingredient = <div className={'Cheese'}></div>;\r\n\t\t\tbreak;\r\n\t\tcase 'lettuce':\r\n\t\t\tingredient = <div className={'Lettuce'}></div>;\r\n\t\t\tbreak;\r\n\t\tcase 'bacon':\r\n\t\t\tingredient = <div className={'Bacon'}></div>;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tingredient = null;\r\n\t\t\tbreak;\r\n\t}\r\n\treturn ingredient;\r\n};\r\n\r\nIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Ingredient;\r\n","import React from 'react';\r\nimport './Burger.css';\r\nimport Ingredient from './Ingredient/Ingredient';\r\n\r\nconst Burger = ({ ingredients }) => {\r\n\tlet transformedIngredients = Object.keys(ingredients)\r\n\t\t.map(igKey => [...Array(ingredients[igKey])].map((_, i) => <Ingredient key={igKey + i} type={igKey} />))\r\n\t\t.reduce((arr, el) => {\r\n\t\t\treturn arr.concat(el);\r\n\t\t}, []);\r\n\tif (transformedIngredients.length === 0) {\r\n\t\ttransformedIngredients = <p>Please start adding ingredients.</p>;\r\n\t}\r\n\treturn (\r\n\t\t<div className='burger'>\r\n\t\t\t<Ingredient type='bread-top' />\r\n\t\t\t{transformedIngredients}\r\n\t\t\t<Ingredient type='bread-bottom' />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Burger;\r\n","import React from 'react';\r\nimport './BuildControl.css';\r\n\r\nconst BuildControl = props => {\r\n\tconst { label, added, removed, disabled } = props;\r\n\treturn (\r\n\t\t<div className=\"control\">\r\n\t\t\t<div className=\"label\">{label}</div>\r\n\t\t\t<button className=\"less\" onClick={removed} disabled={disabled}>\r\n\t\t\t\tRemove\r\n\t\t\t</button>\r\n\t\t\t<button className=\"more\" onClick={added}>\r\n\t\t\t\tAdd\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BuildControl;\r\n","import React from \"react\";\r\nimport \"./BuildControls.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\n\r\nconst controls = [\r\n  { label: \"Lettuce\", type: \"lettuce\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" },\r\n];\r\n\r\nconst BuildControls = props => {\r\n  const { ingredientAdded, ingredientRemoved, disabled, price, purchasable, ordered } = props;\r\n  return (\r\n    <div className=\"controls\">\r\n      <p>\r\n        Current Price: <strong>${price.toFixed(2)}</strong>\r\n      </p>\r\n      {controls.map(ctrl =>\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => ingredientAdded(ctrl.type)}\r\n          removed={() => ingredientRemoved(ctrl.type)}\r\n          disabled={disabled[ctrl.type]} />\r\n      )}\r\n      <button\r\n        disabled={!purchasable}\r\n        onClick={ordered}\r\n        className=\"orderBtn mt3\">\r\n        ORDER NOW\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuildControls;\r\n","import React, { Component } from \"react\";\r\nimport \"./Modal.css\";\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n  }\r\n  render() {\r\n    const { children, show, modalClosed } = this.props;\r\n    return <>\r\n      <Backdrop show={show} clicked={modalClosed} />\r\n      <div\r\n        className=\"modal\"\r\n        style={{\r\n          transform: show ? 'translateY(0)' : 'translateY(-100vh)',\r\n          opacity: show ? '1' : '0'\r\n        }}>\r\n        {children}\r\n      </div>\r\n    </>;\r\n  }\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst Button = ({ children, clicked, btnType }) => (\r\n  <button\r\n    className={['grow', 'button', btnType].join(' ')}\r\n    onClick={clicked}\r\n  >{children}</button>\r\n);\r\n\r\nexport default Button;","import React from \"react\";\r\nimport Button from \"../../UI/Button/Button\"\r\n\r\nconst OrderSummary = (props) => {\r\n  const { ingredients, purchaseCancel, purchaseContinue, price } = props;\r\n  const summary = Object.keys(ingredients).map(igKey => (\r\n    <li key={igKey} className=\"ttc\">\r\n      {igKey}: {ingredients[igKey]}\r\n    </li>\r\n  ));\r\n  return <>\r\n    <h3 className=\"tc\">Your Order</h3>\r\n    <p>A delicious burger with the following ingredients:</p>\r\n    <ul>{summary}</ul>\r\n    <p><strong>Total Price: ${price.toFixed(2)} </strong></p>\r\n    <p>Continue to checkout?</p>\r\n    <div className=\"tc\">\r\n      <Button btnType=\"danger\" clicked={purchaseCancel}>CANCEL</Button>\r\n      <Button btnType=\"success\" clicked={purchaseContinue}>CONTINUE</Button>\r\n    </div>\r\n  </>;\r\n};\r\n\r\nexport default OrderSummary;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nconst Spinner = (props) => {\r\n  let classes = ['spinner'];\r\n  if (props.looks) {\r\n    classes = ['spinner', props.looks]\r\n  }\r\n  return (\r\n    <div className={classes.join(' ')}>Loading...</div>\r\n  );\r\n}\r\n\r\nexport default Spinner;","import React, { useEffect, useState } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n  const WithErrorHandler = props => {\r\n    const [error, setError] = useState(null);\r\n\r\n    const requestInterceptor = axios.interceptors.request.use(req => {\r\n      setError(null);\r\n      return req;\r\n    });\r\n    const responseInterceptor = axios.interceptors.response.use(res => res, error => {\r\n      setError(error);\r\n      console.log('WithErrorHandler: ', error);\r\n      return Promise.reject(error);\r\n    });\r\n    useEffect(() => {\r\n      return () => {\r\n        axios.interceptors.request.eject(requestInterceptor)\r\n        axios.interceptors.response.eject(responseInterceptor)\r\n      };\r\n    }, [requestInterceptor, responseInterceptor]);\r\n\r\n    return <>\r\n      <Modal\r\n        show={error !== null}\r\n        modalClosed={() => setError(null)}>\r\n        {error !== null ? error.message : null}\r\n      </Modal>\r\n      <WrappedComponent {...props} />\r\n    </>;\r\n  };\r\n  return WithErrorHandler;\r\n};\r\n\r\nexport default withErrorHandler;","import React, { Component } from \"react\";\r\nimport axios from '../../axios-orders';\r\n\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nconst PRICES = {\r\n  lettuce: 0.15,\r\n  bacon: 0.75,\r\n  cheese: 0.5,\r\n  meat: 1.3,\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ingredients: null,\r\n      totalPrice: 4,\r\n      purchasable: false,\r\n      purchasing: false,\r\n      loading: false,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/ingredients.json')\r\n      .then(ingredients => {\r\n        this.setState({ ingredients: ingredients.data })\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error: true })\r\n      })\r\n  }\r\n\r\n\r\n  addIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    const updatedCount = oldCount + 1;\r\n    const updatedIngredients = { ...this.state.ingredients };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceIncrease = PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice + priceIncrease;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchase(updatedIngredients);\r\n  };\r\n\r\n  removeIngredientHandler = type => {\r\n    const oldCount = this.state.ingredients[type];\r\n    if (oldCount <= 0) {\r\n      return;\r\n    }\r\n    const updatedCount = oldCount - 1;\r\n    const updatedIngredients = { ...this.state.ingredients };\r\n    updatedIngredients[type] = updatedCount;\r\n    const priceDeduction = PRICES[type];\r\n    const oldPrice = this.state.totalPrice;\r\n    const newPrice = oldPrice - priceDeduction;\r\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n    this.updatePurchase(updatedIngredients);\r\n  };\r\n\r\n  updatePurchase(ingredients) {\r\n    const sum = Object.keys(ingredients)\r\n      .map(igKey => ingredients[igKey])\r\n      .reduce((sum, el) => {\r\n        return sum + el;\r\n      }, 0);\r\n    this.setState({ purchasable: sum > 0 });\r\n  }\r\n\r\n  purchaseHandler = () => {\r\n    this.setState({ purchasing: true });\r\n  }\r\n\r\n  purchaseCancel = () => {\r\n    this.setState({ purchasing: false })\r\n  }\r\n\r\n  purchaseContinue = () => {\r\n    const ingredients = encodeURIComponent(JSON.stringify(this.state.ingredients));\r\n    const price = encodeURIComponent(this.state.totalPrice);\r\n    this.props.history.push({\r\n      pathname: '/burger-builder/checkout',\r\n      search: `?ingredients=${ingredients}&price=${price}`\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const disabledInfo = { ...this.state.ingredients };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n    let orderSummary = null;\r\n    let burger = this.state.error ? <p>Ingredients couldn't be loaded.</p> : <Spinner looks=\"mt6\" />\r\n    if (this.state.ingredients) {\r\n      burger = (\r\n        <>\r\n          <Burger ingredients={this.state.ingredients} />\r\n          <BuildControls\r\n            ingredientAdded={this.addIngredientHandler}\r\n            ingredientRemoved={this.removeIngredientHandler}\r\n            disabled={disabledInfo}\r\n            purchasable={this.state.purchasable}\r\n            ordered={this.purchaseHandler}\r\n            price={this.state.totalPrice} />\r\n        </>\r\n      )\r\n      orderSummary = <OrderSummary\r\n        ingredients={this.state.ingredients}\r\n        purchaseCancel={this.purchaseCancel}\r\n        purchaseContinue={this.purchaseContinue}\r\n        price={this.state.totalPrice} />\r\n    }\r\n    if (this.state.loading) {\r\n      orderSummary = <Spinner />;\r\n    }\r\n    return <>\r\n      <Modal\r\n        show={this.state.purchasing}\r\n        modalClosed={this.purchaseCancel}>\r\n        {orderSummary}\r\n      </Modal>\r\n      {burger}\r\n    </>;\r\n  };\r\n};\r\n\r\nexport default withErrorHandler(BurgerBuilder, axios);\r\n","import React from 'react';\r\n\r\nimport './CheckoutSummary.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst CheckoutSummary = (props) => {\r\n  const { ingredients, checkoutCanceled, checkoutContinued } = props;\r\n  return (\r\n    <div className='checkoutSummary'>\r\n      <h1>We hope it tastes good!</h1>\r\n      <div style={{ width: '100%', margin: 'auto' }}>\r\n        <Burger ingredients={ingredients} />\r\n      </div>\r\n      <Button\r\n        clicked={checkoutCanceled}\r\n        btnType=\"danger\">\r\n        CANCEL\r\n      </Button>\r\n      <Button\r\n        clicked={checkoutContinued}\r\n        btnType=\"success\">\r\n        CONTINUE\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutSummary;","import React, { Component } from 'react';\r\nimport axios from '../../../axios-orders';\r\n\r\nimport './ContactData.css';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    address: {\r\n      street: '',\r\n      city: '',\r\n      state: '',\r\n      zip: '',\r\n    },\r\n    loading: false,\r\n    submitted: false,\r\n  }\r\n\r\n  orderHandler = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ loading: true });\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.price,\r\n      customer: {\r\n        name: 'Kendra Bryant',\r\n        adderss: {\r\n          street: '100 E Center St',\r\n          city: 'Provo',\r\n          state: 'UT',\r\n          zip: '84606'\r\n        },\r\n        email: 'kendraa@utahcounty.gov'\r\n      },\r\n      deliveryMethod: 'fastest'\r\n    }\r\n    setTimeout(() => {\r\n      axios.post('/orders.json', order)\r\n        .then(data => {\r\n          this.setState({ loading: false, submitted: true });\r\n          setTimeout(() => { this.props.history.push('/'); }, 3000);\r\n        })\r\n        .catch(error => {\r\n          this.setState({ loading: false, submitted: false });\r\n          console.log(error);\r\n        })\r\n    }, 2000)\r\n\r\n  }\r\n\r\n  render() {\r\n    let orderForm = (\r\n      <>\r\n        <h4>Enter your contact information:</h4>\r\n        <form action=\"\">\r\n          <label htmlFor=\"name\">Your Name:</label>\r\n          <input type=\"text\" id=\"name\" placeholder=\"Your Name\" />\r\n          <label htmlFor=\"email\">Your Email:</label>\r\n          <input type=\"email\" id=\"email\" placeholder=\"Your Email\" />\r\n          <label htmlFor=\"street\">Street Address:</label>\r\n          <input type=\"text\" id=\"street\" placeholder=\"Street Address\" />\r\n          <label htmlFor=\"city\">City:</label>\r\n          <input type=\"text\" id=\"city\" placeholder=\"City\" />\r\n          <label htmlFor=\"state\">State:</label>\r\n          <input type=\"text\" id=\"state\" placeholder=\"State\" />\r\n          <label htmlFor=\"zip\">Zip:</label>\r\n          <input type=\"text\" id=\"zip\" placeholder=\"Zip\" />\r\n          <hr className=\"mt3\" />\r\n          <Button btnType=\"success\" clicked={this.orderHandler}>ORDER</Button>\r\n        </form>\r\n      </>\r\n    );\r\n    if (this.state.loading) {\r\n      orderForm = <Spinner />;\r\n    } else if (this.state.submitted) {\r\n      orderForm = <h4>Thank you. Your order has been received.</h4>\r\n    }\r\n    return (\r\n      <div className=\"contactData\">\r\n        {orderForm}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactData;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    ingredients: null,\r\n    price: 0,\r\n  }\r\n\r\n  componentWillMount() {\r\n    const query = new URLSearchParams(this.props.location.search);\r\n    const ingredients = JSON.parse(decodeURIComponent(query.get('ingredients')));\r\n    const price = decodeURIComponent(query.get('price'));\r\n    this.setState({ ingredients, price });\r\n  }\r\n\r\n  checkoutCanceledHandler = () => {\r\n    this.props.history.goBack();\r\n  }\r\n\r\n  checkoutContinuedHandler = () => {\r\n    this.props.history.replace('/burger-builder/checkout/contact-data');\r\n  }\r\n\r\n  render() {\r\n    const { path } = this.props.match;\r\n    return (\r\n      <div>\r\n        <CheckoutSummary\r\n          ingredients={this.state.ingredients}\r\n          checkoutCanceled={this.checkoutCanceledHandler}\r\n          checkoutContinued={this.checkoutContinuedHandler} />\r\n        <Route\r\n          path={`${path}/contact-data`}\r\n          render={(props) => <ContactData\r\n            {...props}\r\n            ingredients={this.state.ingredients}\r\n            price={this.state.price} />} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkout;","import React from 'react';\r\n\r\nimport './Order.css';\r\n\r\nconst Order = ({ ingredients, price }) => {\r\n  const ingr = [];\r\n  for (let key in ingredients) {\r\n    ingr.push({ name: key, amount: ingredients[key] })\r\n  }\r\n  // console.log(ingr);\r\n  const output = ingr.map(ig => {\r\n    return (\r\n      <span\r\n        style={{\r\n          display: 'inline-block',\r\n          textTransform: 'capitalize',\r\n          margin: '0 8px',\r\n          border: '1px solid #ccc',\r\n          padding: '5px',\r\n        }}\r\n        key={ig.name}>\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    )\r\n  });\r\n  return (\r\n    <div className=\"order\">\r\n      <p>Ingredients: {output}</p>\r\n      <p>Price: <strong>${Number.parseFloat(price).toFixed(2)}</strong></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport axios from '../../axios-orders';\r\n\r\nimport Order from '../../components/Order/Order';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\n\r\nclass Orders extends Component {\r\n  state = {\r\n    orders: [],\r\n    loading: true,\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('/orders.json')\r\n      .then(res => {\r\n        const orders = [];\r\n        for (let key in res.data) {\r\n          orders.push({ ...res.data[key], id: key })\r\n        }\r\n        this.setState({ loading: false, orders });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({ loading: false });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.orders.map(order => (\r\n          <Order\r\n            key={order.id}\r\n            price={order.price}\r\n            ingredients={order.ingredients} />))}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withErrorHandler(Orders, axios);","import { Route, Switch, Redirect } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport Layout from './containers/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/burger-builder\" exact component={BurgerBuilder} />\n            <Route path=\"/burger-builder/checkout\" component={Checkout} />\n            <Route path=\"/burger-builder/orders\" component={Orders} />\n            <Redirect from=\"/\" to=\"burger-builder\" component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'tachyons';\nimport './index.css';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}